# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xYB76bFqoud9TN6yMVZhVP_HUsfPSuTe
"""

import array
# Creating an array
print(array.array('i', [1, 2, 3, 4, 5]))

import numpy as np
# Creating a list named "a"
a = [1, 2, 3, 4, 5]
print(type(a))
print(np.array(a))
np.array([range(i, i + 4) for i in a])

a = np.matrix('1 2; 3 4')
a

np.matrix([[1, 2], [3, 4]])

#Create a Numpy Array containing numbers from 5 to 30 but at equal interval of 2
import numpy as np
# Start = 5, Stop = 30, Step Size = 2
arr = np.arange(5, 30, 2)
print(arr)

#Create a Numpy Array containing elements from 1 to 10 with default interval i.e. 1
import numpy as np
# Start = 1, Stop = 10. As Step Size is not provided, so default value be 1
arr = np.arange(1, 10)
print(arr)

#Create a Numpy Array containing elements up to 20 with default start and step size
import numpy as np
def main():
   print('*** Create numpy array using numpy.arange() ***')
   print('Create a Numpy Array containing elements from 5 to 30 but at equal interval of 2')
   # Start = 5, Stop = 30, Step Size = 2
   arr = np.arange(5, 30, 2)
   print('Contents of the Array : ', arr)
   print('Create a Numpy Array containing elements from 1 to 10 with default interval i.e. 1')
   # Start = 1, Stop = 10. As Step Size is not provided, so default value be 1
   arr = np.arange(1, 10)
   print('Contents of the Array : ', arr)
   print('Create a Numpy Array containing elements up to 10 with default start and default step size')
   # Stop = 20. As Start &amp; Step Size is not provided, so default value be 0 &amp; 1 respectively
   arr = np.arange(20)
   print('Contents of the Array : ', arr)
if __name__ == '__main__':
   main()

import numpy as np
 
# Creating array object
arr = np.array( [[ 1, 2, 3],
                 [ 4, 2, 5]] )
 
# Printing type of arr object
print("Array is of type: ", type(arr))
 
# Printing array dimensions (axes)
print("No. of dimensions: ", arr.ndim)
 
# Printing shape of array
print("Shape of array: ", arr.shape)
 
# Printing size (total number of elements) of array
print("Size of array: ", arr.size)
 
# Printing type of elements in array
print("Array stores elements of type: ", arr.dtype)

#Reshape From 1-D to 2-D
import numpy as np

arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])

newarr = arr.reshape(4, 3)

print(newarr)

#Reshape From 1-D to 3-D
import numpy as np

arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])

newarr = arr.reshape(2, 3, 2)

print(newarr)

a = np.array([[1,2], [3,4]])
a.flatten()

x = np.arange(4).reshape((2,2))
np.transpose(x)

x = np.ones((1, 2, 3))
np.transpose(x, (1, 0, 2)).shape

x = np.ones((2, 3, 4, 5))
np.transpose(x).shape

